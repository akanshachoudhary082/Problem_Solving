import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'anagram' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts STRING s as parameter.
     */

    public static int anagram(String s) {
    // Write your code here
     if (s.length() % 2 != 0) {
            return -1;
        }

        int mid = s.length() / 2;
        String firstHalf = s.substring(0, mid);
        String secondHalf = s.substring(mid);

        // Count frequencies of characters in both halves
        int[] charCount = new int[26]; // Assuming only lowercase English letters

        for (char c : firstHalf.toCharArray()) {
            charCount[c - 'a']++; // Increment count for characters in the first half
        }

        for (char c : secondHalf.toCharArray()) {
            charCount[c - 'a']--; // Decrement count for characters in the second half
        }

        // Calculate the number of changes needed
        int changes = 0;
        for (int count : charCount) {
            if (count > 0) {
                changes += count; // Count how many characters need to be changed
            }
        }

        return changes; // Return the total number of changes needed
    }

    

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int q = Integer.parseInt(bufferedReader.readLine().trim());

        IntStream.range(0, q).forEach(qItr -> {
            try {
                String s = bufferedReader.readLine();

                int result = Result.anagram(s);

                bufferedWriter.write(String.valueOf(result));
                bufferedWriter.newLine();
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        });

        bufferedReader.close();
        bufferedWriter.close();
    }
}
