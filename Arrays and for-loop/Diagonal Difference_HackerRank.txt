import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

class Solution {

    /*
     * Complete the 'diagonalDifference' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts 2D_INTEGER_ARRAY arr as parameter.
     */

    public static int diagonalDifference(List<List<Integer>> arr) {
    // Write your code here
    int leftToRight = 0;
    int rightToLeft = 0;
    int n = arr.size();
    
    for(int i=0;i<n;i++)
    {
        leftToRight = leftToRight + arr.get(i).get(i);
        rightToLeft = rightToLeft + arr.get(i).get(n-1-i);
        
        
    }
    return Math.abs(leftToRight - rightToLeft);
}

public static void main(String[] args)
{
    Scanner sc = new Scanner(System.in);
        
        int n = sc.nextInt(); // Read the size of the matrix
        sc.nextLine(); // Consume the newline
        
        List<List<Integer>> matrix = new ArrayList<>();
        
        // Read the matrix row by row
        for (int i = 0; i < n; i++) {
            String[] rowItems = sc.nextLine().split(" ");
            List<Integer> row = new ArrayList<>();
            for (String item : rowItems) {
                row.add(Integer.parseInt(item));
            }
            matrix.add(row);
        }
        
        int result = diagonalDifference(matrix); // Compute the diagonal difference
        System.out.println(result); // Print the result
        
        sc.close(); // Close the scanner
    }
}