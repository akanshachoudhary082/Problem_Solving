import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'pickingNumbers' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER_ARRAY a as parameter.
     */

    public static int pickingNumbers(List<Integer> a) {
    // Write your code here
int [] frequency = new int[101];
    int maxCount = 0;
    for(int i=0;i<a.size();i++) // 0<6 1<6 2<6 3<6 4<6 5<6
    {
       int num = a.get(i); // num = 4 num = 6 num = 5 num=3 num=3 num=1
        frequency[num]++; // 4=>1  6=>1 5=>1 3=>1 1=>2  1=>1
    }
      
      /*
      frequency[0] = 0
frequency[1] = 1 (1 appears once)
frequency[2] = 0
frequency[3] = 2 (3 appears twice)
frequency[4] = 1 (4 appears once)
frequency[5] = 1 (5 appears once)
frequency[6] = 1 (6 appears once)
      */
      
      for(int i=1;i<frequency.length;i++)  // 1<100 2<100 3<100
      {
          maxCount = Math.max(maxCount,frequency[i]+frequency[i-1]);
          
          //mc=(0,1+[1-1])=>(0,1+0)=>1
          //mc=(1,0+[2-1])=>(1,0+1)=>1
          //mc=(1,2+[3-1])=>(1,2+0)=>2
          //mc=(2,1+[4-1])=>(2,1+2)=>3
          //mc=(3,1+[5-1])=>(2,1+1)=>2
          //mc=(3,1+[6-1])=>(2,1+1)=>2   
      
      
    }
     return maxCount ;

    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> a = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        int result = Result.pickingNumbers(a);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
