import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

class Result {

    /*
     * Complete the 'birthdayCakeCandles' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER_ARRAY candles as parameter.
     */

    public static int birthdayCakeCandles(List<Integer> candles) {
    // Write your code here
     
     int largestNum = 0;
     int largestCount = 0;
     
      
     for(int candle : candles)
     {
         if(candle > largestNum)
         {
             largestNum = candle;
             largestCount = 1;
         }
         else if(candle == largestNum)
         {
             largestCount++;
         }
     }
     return largestCount;
    }



//-----------collection method-------------------

//public static int birthdayCakeCandles(List<Integer> candles) {
    // // Write your code here
    
    //  Collections.sort(candles);
    //     int sum=0;
    //     long maxHeight=candles.get(candles.size()-1);//
    //     for(int i=candles.size()-1; i>=0; i--) {
    //         if(candles.get(i)>=maxHeight)
    //             sum++;
    //         else
    //             break;
    //     }
    //     return sum;
    // }
}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int candlesCount = Integer.parseInt(bufferedReader.readLine().trim());

        String[] candlesTemp = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        List<Integer> candles = new ArrayList<>();

        for (int i = 0; i < candlesCount; i++) {
            int candlesItem = Integer.parseInt(candlesTemp[i]);
            candles.add(candlesItem);
        }

        int result = Result.birthdayCakeCandles(candles);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
