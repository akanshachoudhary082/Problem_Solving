import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

class Result {

    /*
     * Complete the 'minimumNumber' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER n
     *  2. STRING password
     */

    public static int minimumNumber(int n, String password) {
    // Return the minimum number of characters to make the password strong
       boolean hasDigit = false;
       boolean hasLower = false;
       boolean hasUpper = false;
       boolean hasSpecial = false;
       
       //2bb#A
       
       String SpecialCharacters = "!@#$%^&*()-+";
       for(char c : password.toCharArray())
       {
           if(Character.isDigit(c)) // 2
           {
               hasDigit = true;     //TRUE
               
           }else if(Character.isLowerCase(c))  // b b
           {
               hasLower = true; // true true
               
           }else if(Character.isUpperCase(c))  // A 
           {
               hasUpper = true; //true 
               
           }else if(SpecialCharacters.indexOf(c) >=0){   // # ->  3 >=0
               hasSpecial = true;  // true
           }
       }
       
       int missingCount = 0;
       if (!hasDigit) missingCount++; //(!1)-> 0 
       if (!hasLower) missingCount++; //(!1)->0
       if (!hasUpper) missingCount++; //(!1)-> 0
       if (!hasSpecial) missingCount++;//(!1)->0
       
       int totalCharactersToAdd = Math.max(missingCount,6 - n); //(0,6 - 5) ->(0,1)
       //So, the minimum number of characters to add to make this password strong is 1
       
        return totalCharactersToAdd;
       
    }
    
   

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        String password = bufferedReader.readLine();

        int answer = Result.minimumNumber(n, password);

        bufferedWriter.write(String.valueOf(answer));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
